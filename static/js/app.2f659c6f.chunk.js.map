{"version":3,"sources":["assets/snack.icon.png","src/Navbar.js","src/AddTodo.js","src/Todo.js","App.js","web-build/register-service-worker.js"],"names":["module","exports","img","uri","Navbar","title","ImageBackground","source","style","styles","View","navbar","Text","text","StyleSheet","create","height","alignItems","justifyContent","paddingBottom","color","fontSize","resizeMode","AddTodo","onSubmit","useState","value","setValue","block","TextInput","input","onChangeText","placeholder","autoCorrect","autoCapitalize","autoFocus","TouchableHighlight","onPress","trim","Alert","alert","btn","flexDirection","marginBottom","width","padding","borderBottomWidth","borderBottomColor","borderWidth","borderBottomStartRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","overflow","borderRadius","Todo","todo","onRemove","TouchableOpacity","id","borderColor","borderStyle","marginHorizontal","backgroundColor","paddingHorizontal","paddingVertical","App","todos","setTodos","removeTodo","prev","filter","Image","logo","require","container","Date","now","toString","FlatList","keyExtractor","item","data","renderItem","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console"],"mappings":"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","file":"static/js/app.2f659c6f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/snack.icon.9568ec00.png\";","import React from 'react'\r\nimport { View, Text, StyleSheet, ImageBackground } from 'react-native'\r\n\r\nconst img = {uri: 'https://possets.com/wp-content/uploads/2016/05/products-night-sky-stars.jpg'}\r\n\r\nexport const Navbar = ({title}) => {\r\n    return(\r\n        <ImageBackground source={img} style={styles.img}>\r\n        <View style={styles.navbar}>\r\n            <Text style={styles.text}>{title}</Text>\r\n        </View> \r\n        </ImageBackground>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    navbar: {\r\n        height: 70,\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        paddingBottom: 10,\r\n    },\r\n    text: {\r\n        color: '#FFF',\r\n        fontSize: 20\r\n    },\r\n    img: {\r\n        resizeMode: \"cover\"\r\n    }\r\n})","import React, {useState} from 'react'\r\nimport { View, StyleSheet, TextInput, Button, Alert, TouchableOpacity, Text, ImageBackground,TouchableHighlight } from 'react-native'\r\n\r\nexport const AddTodo = ({ onSubmit }) => {\r\n    const [value, setValue] = useState('')\r\n\r\n    const pressHandler = () => {\r\n      if (value.trim()) {\r\n        onSubmit(value)\r\n        setValue('')\r\n      } else {\r\n          Alert.alert('To do list name cannot be empty')\r\n      }\r\n    }\r\n\r\n    const img = {uri: 'https://possets.com/wp-content/uploads/2016/05/products-night-sky-stars.jpg'}\r\n\r\n    return(\r\n        <View style={styles.block}>\r\n            <TextInput\r\n                style={styles.input} \r\n                onChangeText={setValue}\r\n                value={value}\r\n                placeholder='New todo...'\r\n                autoCorrect={true}\r\n                autoCapitalize='none'\r\n                autoFocus={true}\r\n                // keyboardType='number-pad'\r\n            />\r\n            <ImageBackground  source={img} style={styles.img}>\r\n                <TouchableHighlight onPress={pressHandler} style={styles.btn}>\r\n                    <Text style={styles.text}>ADD</Text>  \r\n                </TouchableHighlight>\r\n            </ImageBackground>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    block: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        marginBottom: 15,\r\n    },\r\n    input: {\r\n        width: '70%',\r\n        padding: 10,\r\n        paddingBottom: 10,\r\n        borderBottomWidth: 2,\r\n        borderBottomColor: '#03032F'\r\n    },\r\n    btn: {\r\n        alignItems: 'center',\r\n        width: 85,\r\n        height: 45,\r\n        borderWidth: 1,\r\n        borderBottomStartRadius: 20,\r\n        padding: 13,\r\n        shadowColor: '#FFF',\r\n        shadowOffset: {width: 2, height: 2},\r\n        shadowOpacity: 0.3,\r\n        shadowRadius: 3\r\n    },\r\n    text: {\r\n        color: '#FFF',\r\n    },\r\n    img: {\r\n    resizeMode: \"cover\",\r\n    overflow: 'hidden',\r\n    borderRadius: 20\r\n    }\r\n})","import React from 'react'\r\nimport { Text, View, StyleSheet, TouchableOpacity, TouchableHighlight } from 'react-native'\r\n\r\nexport const Todo = ({ todo, onRemove }) => {\r\n    const longPressHandler = () => {\r\n        onRemove(todo.id)\r\n    }\r\n    \r\n    return(\r\n        <TouchableOpacity>\r\n            <View style={styles.todo} >\r\n                <Text>{todo.title}</Text>\r\n                <TouchableHighlight onPress={longPressHandler}>\r\n                    <Text style={styles.btn}>REMOVE</Text>\r\n                </TouchableHighlight>\r\n            </View>\r\n        </TouchableOpacity>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    todo: {\r\n        flexDirection:'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        padding: 10,\r\n        borderWidth: 1,\r\n        borderColor: '#03032F',\r\n        borderStyle: 'dashed',\r\n        borderRadius: 5,\r\n        marginBottom: 10,\r\n        marginHorizontal: 30\r\n    },\r\n    btn: {\r\n        backgroundColor: '#03032F',\r\n        color: '#FFF',\r\n        width: 70,\r\n        height: 30,\r\n        borderRadius: 10,\r\n        paddingHorizontal: 8,\r\n        paddingVertical: 6,\r\n        fontSize: 13\r\n    }\r\n})\r\n","import React, {useState} from 'react';\nimport { StyleSheet, View, FlatList, Image} from 'react-native';\nimport { Navbar } from './src/Navbar';\nimport { AddTodo } from './src/AddTodo';\nimport { Todo } from './src/Todo';\n\nexport default function App() {\n  const [todos, setTodos] = useState([])\n\n  // const addTodo = (title) => {\n  //   const newTodo = {\n  //     id: Date.now().toString(),\n  //     title: title\n  //   }\n    \n  //   setTodos(todos.concat([newTodo]))\n  //   setTodos((prevTodos) => {\n  //     return [\n  //       ...prevTodos,\n  //       newTodo\n  //     ]\n  //   })\n  // }\n  const addTodo = title => {\n    setTodos(prev => [\n      ...prev, \n      {\n        id: Date.now().toString(),\n        title\n      }\n    ])\n  }\n\n  const removeTodo = id => {\n    setTodos(prev => prev.filter(todo => todo.id !== id))\n  }\n\n  return (\n    <View>\n      <Navbar title='Todo App' />\n      <Image style={styles.logo} source={require('./assets/snack.icon.png')} />\n      <View style={styles.container}>\n        <AddTodo onSubmit={addTodo} />\n      </View>\n\n      <FlatList \n        keyExtractor={item => item.id.toString()}\n        data={todos}\n        renderItem={({item}) => <Todo todo={item}  onRemove={removeTodo} /> }\n      />\n        \n      {/* <View>\n        { todos.map(todo => (\n            <Todo todo={todo} key={todo.id} /> \n        ))}\n      </View> */}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n     paddingHorizontal: 30,\n     paddingVertical: 20\n  },\n  logo: {\n    height: 20,\n    width: 20,\n  }\n});\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/react-native-todo/expo-service-worker.js', { scope: '/react-native-todo/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}